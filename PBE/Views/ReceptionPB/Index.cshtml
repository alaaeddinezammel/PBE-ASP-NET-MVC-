@using PBE.Models
@model PBE.Data.BK_MAN_LEDGER

@if (Session["user"] == null)
{
    Response.Redirect("~/ReceptionPB/LogOut");
}
else
{

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";



    <div style="background:#E8E8E8;">
        <br />
        <div style="float:left">Rattachement automatique :&nbsp;&nbsp;</div>
        <div id="societes" style="float:left"></div>
        <div style="float:left">&nbsp;&nbsp;</div>
        <div id="comptes" style="float:left"></div>
        <div style="float:left">&nbsp;&nbsp;</div>
        <div id="mois" style="float:left"></div>
        <div style="float:left">&nbsp;&nbsp;<input type="text" id="annees" /></div>
        <div style="float:left">&nbsp;<input type="button" id="Enregistrer" value="Enregistrer" width="10" /></div>
        <div style="float:left">&nbsp;&nbsp;&nbsp;&nbsp;<input type="button" id="Envoyer" value="Envoyer" /></div>
        <br /><br />
        <table>
            <tr>
                <td>PJ:</td>
                <td>

                    <input type="file" name="file" id="file" />


                </td>
                <td colspan="2">
                    <input type="button" id="Rattacher" value="Rattacher" width="10" />
                </td>
                <td colspan="2">
                    <div id="Ecart" style="color:green; visibility: hidden;"><label style="font-size:small" id="msg"></label></div>

                </td>
            </tr>

        </table>

        @*  <div id="jqxFileUpload">
            </div>*@

    </div>

    @section scripts {

        <script src="~/Scripts/jqx-all.js"></script>

        <script type="text/javascript">
            $(document).ready(function () {
                /*  $('#jqxFileUpload').jqxFileUpload({ browseTemplate: 'success', uploadTemplate: 'primary', cancelTemplate: 'danger', width: 300, uploadUrl: 'imageUpload.php', fileInputName: 'fileToUpload' });
  */
                var m = '@System.Web.HttpContext.Current.Session["Matricule"]';
                while (m.toString().length < 8)
                    m = "0" + m;
                var RattacherPieceJointe = function (rowID, filepath) {
                    //var array = new array();
                    var pj = "";
                    alert(filepath);
                    /* $(self).bind("change", function () {
                         var s = $(self).val().replace(/(c:\\)*fakepath/i, 'd$\PFE\partageFtp');
                         filename.val(s);
                     });*/
                    $.ajax({
                        //id: 'MOVEMENT_ID',
                        enctype: 'multipart/form-data',
                        url: '/ReceptionPB/RattacherPJ?fileName=' + filepath + '&MovementID=' + rowID + '&Matricule=' + m,

                        dataType: 'json',
                        type: "POST",
                        async: false,
                        error: function (json, textStatus, errorThrown) {
                            alert(' Error :' + errorThrown);
                        },
                        success: function (data) {
                            pj = data;

                            //alert(pj);
                        }
                    });
                    return (pj);
                }

                var Verifier = function (rowID, b) {
                    var v = 0;
                    $.ajax({
                        //id: 'MOVEMENT_ID',
                        enctype: 'multipart/form-data',
                        url: '/ReceptionPB/Verifier?MovementID=' + rowID + '&b=' + b,

                        dataType: 'json',
                        type: "POST",
                        async: false,
                        error: function (json, textStatus, errorThrown) {
                            alert(' Error :' + errorThrown);
                        },
                        success: function (data) {
                            v = data;

                            //alert(pj);
                        }
                    });
                    return (v);
                }

                var Envoyer = function (matricule) {
                    $.ajax({
                        //id: 'MOVEMENT_ID',
                        url: '/ReceptionPB/Envoyer?Matricule=' + matricule,

                        dataType: 'json',
                        type: "POST",
                        async: false,
                        success: function (data, status, xhr) {
                            // update command is executed.
                            // commit(true);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(jqXHR.statusText);
                            // commit(false);
                        }
                    });
                }

                var DeletePieceJointe = function (rowID) {
                    $.ajax({
                        //id: 'MOVEMENT_ID',
                        url: '/ReceptionPB/DeletePJ?MovementID=' + rowID,

                        dataType: 'json',
                        type: "POST",
                        //async: false,
                        success: function (data, status, xhr) {
                            // update command is executed.
                            //commit(true);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(jqXHR.statusText);
                            // commit(false);
                        }
                    });
                }

                var t1 = new Array();
                var t2 = new Array();
                var t3 = new Array();
                var t4 = new Array();

                $("#Enregistrer").jqxButton();
                $("#Enregistrer").bind('click', function () {

                    if (t1.length > 0) {
                        if (t3.length > 0) {

                            for (i = 0; i < t3.length; i++) {
                                var rslt = Verifier(t3[i], t4[i]);
                            }
                            while (t3.length) { t3.pop(); }
                            while (t4.length) { t4.pop(); }
                            //document.getElementById("msg").innerHTML = "Pièce(s) rattachée(s) et vérifiée(s) ";
                            //document.getElementById("Ecart").style.visibility = 'visible';
                        }
                        /*else
                        {
                            document.getElementById("msg").innerHTML = "Pièce(s) rattachée(s) ";
                            document.getElementById("Ecart").style.visibility = 'visible';
                        }*/
                        for (i = 0; i < t1.length; i++) {
                            var rslt = RattacherPieceJointe(t1[i], t2[i]);
                        }
                        while (t1.length) { t1.pop(); }
                        while (t2.length) { t2.pop(); }

                    }
                    else if (t3.length > 0) {

                        for (i = 0; i < t3.length; i++) {
                            var rslt = Verifier(t3[i], t4[i]);
                        }
                        while (t3.length) { t3.pop(); }
                        while (t4.length) { t4.pop(); }
                        //document.getElementById("msg").innerHTML = "Pièce(s) vérifiée(s) ";
                        //document.getElementById("Ecart").style.visibility = 'visible';
                    }
                    cmp_code = $("#societes").jqxDropDownList('getSelectedItem').value;
                    acc_code = $("#comptes").jqxDropDownList('getSelectedItem').value;
                    mois = $("#mois").jqxDropDownList('getSelectedItem').value;
                    loadGrid(cmp_code, m, acc_code, mois, annee);

                });

                $("#Rattacher").jqxButton();
                $("#Rattacher").bind('click', function () {
                    var rowindex = $('#grid').jqxGrid('getselectedrowindexes');
                    var data = $('#grid').jqxGrid('getrowdata', rowindex);
                    //alert(data.MOVEMENT_ID)
                    var id = data.MOVEMENT_ID;
                    //alert(id);
                    var filev = $('#file').val();
                    t1.push(id);
                    t2.push(filev);
                    // alert(filev);
                    //  alert(document.getElementById("testinput").files[0].fileName);
                    //var rslt = RattacherPieceJointe(id);
                    // $("#grid").jqxGrid('updatebounddata');



                    //alert(rslt);
                });

                $("#Envoyer").jqxButton();
                $("#Envoyer").bind('click', function () {
                    // alert(m);
                    var rslt = Envoyer(m);
                    cmp_code = $("#societes").jqxDropDownList('getSelectedItem').value;
                    acc_code = $("#comptes").jqxDropDownList('getSelectedItem').value;
                    mois = $("#mois").jqxDropDownList('getSelectedItem').value;
                    loadGrid(cmp_code, m, acc_code, mois, annee);
                    document.getElementById("msg").innerHTML = "Pièce(s) vérifiée(s) et envoyée(s) avec succès pour l'approbation";
                    document.getElementById("Ecart").style.visibility = 'visible';
                });

                //var m = '@System.Web.HttpContext.Current.Session["Matricule"]'

                date = new Date();
                var annee = date.getFullYear();
                $("#annees").jqxInput({ height: 25, width: "25%", minLength: 1 });
                $("#annees").val(annee);
                //la variable session Session["Matricule"] elimine les zeros
                var m = '@System.Web.HttpContext.Current.Session["Matricule"]';
                while (m.toString().length < 8)
                    m = "0" + m;

                var societeSource =
                {
                    datatype: "json",
                    datafields: [
                        {
                            name: 'CMP_CODE', type: 'string'

                        },
                        {
                            name: 'DESCRIPTION', type: 'string'

                        }

                    ],
                    //  root: "Transactions",
                    //  record: "Transaction",
                    id: 'CMP_CODE',
                    url: '/ReceptionPB/GetCompanies?Matricule=' + m,
                    async: false
                };
                // Create a jqxDropDownList

                var societeAdapter = new $.jqx.dataAdapter(societeSource, {
                    autoBind: true,
                    beforeLoadComplete: function (records) {
                        // alert(111);
                        var data = new Array();


                        // update the loaded records. Dynamically add EmployeeName and EmployeeID fields.
                        for (var i = 0; i < records.length; i++) {
                            // alert(i);
                            var societe = records[i];
                            societe.CMP_CODE = societe.CMP_CODE;
                            societe.DESCRIPTION = societe.DESCRIPTION;
                            data.push(societe);
                        }
                        return data;
                    }
                });
                $("#societes").jqxDropDownList({ selectedIndex: 0, source: societeAdapter, displayMember: "DESCRIPTION", valueMember: "CMP_CODE", width: "15%", height: 25 });
                $("#societes").jqxDropDownList('insertAt', { label: 'Toutes les societés', value: "0" }, 0);

                var compteSource =
               {
                   datatype: "json",
                   datafields: [
                       {
                           name: 'ACC_CODE', type: 'ACC_CODE'

                       }

                   ],
                   //  root: "Transactions",
                   //  record: "Transaction",
                   id: 'ACC_CODE',
                   url: '/ReceptionPB/GetAccounts?Matricule=' + m,
                   async: false
               };
                // Create a jqxDropDownList

                var compteAdapter = new $.jqx.dataAdapter(compteSource, {
                    autoBind: true,
                    beforeLoadComplete: function (records) {
                        // alert(111);
                        var data = new Array();


                        // update the loaded records. Dynamically add EmployeeName and EmployeeID fields.
                        for (var i = 0; i < records.length; i++) {
                            // alert(i);
                            var compte = records[i];
                            compte.ACC_CODE = compte.ACC_CODE;
                            data.push(compte);
                        }
                        return data;
                    }
                });
                $("#comptes").jqxDropDownList({ selectedIndex: 0, source: compteAdapter, displayMember: "ACC_CODE", valueMember: "ACC_CODE", width: "15%", height: 25 });
                $("#comptes").jqxDropDownList('insertAt', { label: 'Tous les comptes', value: "0" }, 0);

                var moisSource =
                {
                    datatype: "json",
                    datafields: [
                        {
                            name: 'Id_Mois', type: 'number'

                        },
                        {
                            name: 'Libelle_Mois', type: 'string'

                        }

                    ],
                    //  root: "Transactions",
                    //  record: "Transaction",
                    id: 'Id_Mois',
                    url: '/ReceptionPB/GetMois',
                    async: false
                };
                // Create a jqxDropDownList

                var moisAdapter = new $.jqx.dataAdapter(moisSource, {
                    autoBind: true,
                    beforeLoadComplete: function (records) {
                        // alert(111);
                        var data = new Array();


                        // update the loaded records. Dynamically add EmployeeName and EmployeeID fields.
                        for (var i = 0; i < records.length; i++) {
                            // alert(i);
                            var mois = records[i];
                            mois.Id_Mois = mois.Id_Mois;
                            mois.Libelle_Mois = mois.Libelle_Mois;
                            data.push(mois);
                        }
                        return data;
                    }
                });
                $("#mois").jqxDropDownList({ selectedIndex: 0, source: moisAdapter, displayMember: "Libelle_Mois", valueMember: "Id_Mois", width: "10%", height: 25 });

                var revisionsSource =
                            {
                                datatype: "json",
                                datafields: [
                                    { name: 'Id_Revision', type: 'number' },
                                    {
                                        name: 'Libelle_Revision', type: 'string'
                                    }
                                ],
                                id: 'Id_Revision',
                                url: "/ReceptionPB/GetRevisions",
                                async: false
                            };

                var revisionsAdapter = new $.jqx.dataAdapter(revisionsSource, {
                    autoBind: true,
                    beforeLoadComplete: function (records) {
                        // alert(111);
                        var data = new Array();

                        // update the loaded records. Dynamically add EmployeeName and EmployeeID fields.
                        for (var i = 0; i < records.length; i++) {
                            // alert(i);
                            var revision = records[i];
                            revision.Libelle_Revision = revision.Libelle_Revision;
                            revision.Id_Revision = revision.Id_Revision;
                            data.push(revision);
                        }
                        return data;
                    }
                });

                // functions.
                // prepare the data
                var loadGrid = function (cmp_code, Matricule, ACC_CODE, mois, annee) {
                    $.ajax({
                        //id: 'MOVEMENT_ID',
                        type: "POST",
                        //async: false,
                        url: '/ReceptionPB/GetMouvements?cmp_code=' + cmp_code + '&Matricule=' + Matricule + '&ACC_CODE=' + ACC_CODE + '&mois=' + mois + '&annee=' + annee,
                        dataType: 'json',
                        async: false,
                        error: function (json, textStatus, errorThrown) {
                            alert(' Error :' + errorThrown);
                        },
                        success: function (data) {
                            // initailize grid
                            var gridData = data;
                            var source =
                            {
                                localdata: gridData,
                                datatype: "json",
                                
                                datafields: [
                                     { name: 'MOVEMENT_ID', type: 'number' },
                                     { name: 'BANK_CODE', type: 'string' },
                                     { name: 'SITE', type: 'string' },
                                     { name: 'cmp', type: 'string' },
                                     { name: 'ACC_CODE', type: 'string' },
                                     { name: 'FLOW_CODE', type: 'string' },
                                     { name: 'BOOK_DATE', type: 'date', formatString: 'D' },
                                     { name: 'AMOUNT', type: 'float'/*, formatStrings: ['c19', 'c3', 'd'] */ },
                                     { name: 'SIGNE', type: 'string' },
                                     { name: 'DESCRIPTION', type: 'string' },
                                     { name: 'REFERENCE_NUMBER', type: 'string' },
                                     { name: 'PJ', type: 'string' },
                                     { name: 'FS', type: 'bool' },
                                     { name: 'Delete', type: 'string' },
                                     { name: 'MAN_Reception', type: 'bool' },
                                     { name: 'MAN_Date_reception', type: 'date' },
                                     {
                                         name: 'Libelle_Revision',
                                         value: 'Id_Revision',
                                         values: {
                                             source: revisionsAdapter.records,
                                             value: 'Id_Revision',
                                             name: 'Libelle_Revision'
                                         }
                                     },
                                     {
                                         name: 'Id_Revision',
                                         type: 'number'
                                     }

                                ],
                                id: 'MOVEMENT_ID',
                                //async: false,
                                updaterow: function (rowid, gridData, commit) {
                                    // synchronize with the server - send update command
                                    //alert(gridData.MOVEMENT_ID);
                                    // async: false;

                                    t3.push(gridData.MOVEMENT_ID);
                                    t4.push(gridData.MAN_Reception);


                                }
                            };
                            var dataAdapter = new $.jqx.dataAdapter(source);
                            var imagerendererdelete = function (row, datafield, value) {
                                //alert(value);
                                //return '<img style="margin-left: 5px;" height="20" width="35" src="./content/images/icons/delete1.png"/>';
                                // alert(row.PJ);
                                // if (datafield.PJ != "")
                                return '<img style="margin-left: 5px; border: none;" align="center"; height="25" width="25" src="./content/images/icons/delete1.png"/>';
                            }

                            /* function OpenPDF() {
                                 var oShell = new ActiveXObject("Shell.Application");
                                 var commandtoRun = "AcroRd32.exe";
                                 var commandParms = "localhost//Test//06_SIGL_Demange_Nicolas_Rapport.pdf";
                                 oShell.ShellExecute(commandtoRun, commandParms, "", "open", "1")
                             }*/

                            var imagerenderer = function (row, datafield, value) {
                                //alert(value);
                                if (value != "") {
                                    var src = value;
                                    // alert(src);
                                    var srcimage = "./content/images/icons/rattachement.png";
                                    // javascript: void (window.open('"&amp; replace(replace(Fields!PJ.Value,"\","/"),"ftp","fpbe") &amp;"', '_blank'))
                                    //var lien = '<a href="javascript:void(window.open(replace("' + src + '")" target="_blank"><img id="img1" style="margin-left: 5px; border: none;" height="20" width="35" src="' + srcimage + '"/></a>';
                                    var lien = '<a href="' + src + '" target="_blank"><img id="img1" style="margin-left: 5px; border: none;" height="20" width="35" src="/content/images/icons/rattachement.png"/></a>';
                                    //alert(lien);
                                    return lien;
                                    //return '<img id="img1" style="margin-left: 5px; border: none;" height="20" width="35" src="' + srcimage + '"/>';
                                }


                            }
                            /* if(m.toString().length < 8)
                             {
                                 for(i=0;i<8-m.toString();i++)
                                 {
                                     m="0"+m;
                                 }
                             }*/
                            //alert(m.toString());
                            // create Tree Grid
                            $("#grid").jqxGrid(
                            {
                                width: "100%",
                                //theme: 'ui-sunny',
                                source: dataAdapter,
                                editable: true,
                                enabletooltips: true,
                                showfilterrow: true,
                                filterable: true,
                                groupable: true,
                                pageable: true,
                                autoheight: true,
                                columnsresize: true,
                                sortable: true,
                                selectionmode: 'singlerow',
                                columns: [
                                  { text: "ID", datafield: "MOVEMENT_ID", editable: false, columntype: 'textbox', width: "6%" },
                                  { text: "BANK", datafield: "BANK_CODE", columntype: 'textbox', editable: false, width: "6%" },
                                  { text: "SITE", datafield: "SITE", columntype: 'textbox', editable: false, width: "5%" },
                                  { text: "Societé", datafield: "cmp", editable: false, columntype: 'textbox', editable: false, width: "8%" },
                                  { text: "Compte", datafield: "ACC_CODE", columntype: 'textbox', editable: false, width: "7%" },
                                  { text: "Flux", datafield: "FLOW_CODE", columntype: 'textbox', editable: false, width: "5%" },
                                  {
                                      text: "Date Op", datafield: "BOOK_DATE", editable: false, columntype: 'datetimeinput', filtertype: 'range', cellsformat: 'dd/MM/yy', culture: 'fr-FR', width: "7%"
                                  },
                                  {
                                      text: "Montant", datafield: "AMOUNT"/*, columntype: 'numberinput' ,cellsformat:'c3'*/, filtertype: 'number', editable: false, width: "6%"
                                  },
                                  { text: "S", datafield: "SIGNE", columntype: 'textbox', editable: false, width: "3%" },
                                  { text: "Description", datafield: "DESCRIPTION", editable: false, columntype: 'textbox', width: "13%" },
                                  { text: "Reference", datafield: "REFERENCE_NUMBER", columntype: 'textbox', editable: false, width: "7%" },
                                  { text: "FS", datafield: "FS", columntype: 'checkbox', editable: false, filtertype: 'bool', width: "5%" },
                                  { text: "Verif", datafield: "MAN_Reception", columntype: 'checkbox', editable: true, filtertype: 'bool', width: "5%" },
                                  { text: "Date Verif", datafield: "MAN_Date_reception", editable: false, columntype: 'datetimeinput', filtertype: 'range', cellsformat: 'd', width: "7%" },
                                  { text: 'PJ', datafield: "PJ", width: "5%", editable: false, cellsrenderer: imagerenderer },
                                  { text: 'Sup PJ', datafield: "Delete", width: "5%", editable: false, filterable: false, groupable: false, cellsrenderer: imagerendererdelete },
                                  {
                                      text: 'Révision', groupable: false, editable: true, datafield: 'Id_Revision', displayfield: 'Libelle_Revision', columntype: 'dropdownlist', width: '12%',
                                      createeditor: function (row, value, editor) {
                                          editor.jqxDropDownList({
                                              source: revisionsAdapter,
                                              displayMember: 'Libelle_Revision',
                                              valueMember: 'Id_Revision'
                                          });
                                      }
                                  }

                                ]
                            });

                        }
                    });
                }
                $("#grid").on("cellclick", function (event) {
                    var column = event.args.column;
                    var rowindex = event.args.rowindex;
                    var columnindex = event.args.columnindex;
                    if (columnindex == 15) {
                        var editrow = rowindex
                        var data = $('#grid').jqxGrid('getrowdata', rowindex);
                        var id = data.MOVEMENT_ID;
                        if (data.PJ != null) {
                            DeletePieceJointe(id);
                            // $("#grid").jqxGrid('updatebounddata');

                        }
                    }
                });

                var cmp_code = $("#societes").jqxDropDownList('getSelectedItem').value;
                var acc_code = $("#comptes").jqxDropDownList('getSelectedItem').value;
                var mois = $("#mois").jqxDropDownList('getSelectedItem').value;
                var annee = $('#annees').jqxInput().val();
                $("#societes").on('select', function (event) {
                    cmp_code = $("#societes").jqxDropDownList('getSelectedItem').value;
                    acc_code = $("#comptes").jqxDropDownList('getSelectedItem').value;
                    mois = $("#mois").jqxDropDownList('getSelectedItem').value;
                    loadGrid(cmp_code, m, acc_code, mois, annee);
                });
                $("#comptes").on('select', function (event) {
                    cmp_code = $("#societes").jqxDropDownList('getSelectedItem').value;
                    acc_code = $("#comptes").jqxDropDownList('getSelectedItem').value;
                    mois = $("#mois").jqxDropDownList('getSelectedItem').value;
                    loadGrid(cmp_code, m, acc_code, mois, annee);
                });
                $("#mois").on('select', function (event) {
                    cmp_code = $("#societes").jqxDropDownList('getSelectedItem').value;
                    acc_code = $("#comptes").jqxDropDownList('getSelectedItem').value;
                    mois = $("#mois").jqxDropDownList('getSelectedItem').value;
                    loadGrid(cmp_code, m, acc_code, mois, annee);
                });
                //alert(m+" : "+cmp_code+" : "+acc_code+" : "+mois+" : "+annee);
                loadGrid(cmp_code, m, acc_code, mois, annee);
            });
        </script>
    }

    <div id="grid"></div>
    <div style="margin-top: 30px;">
        <div id="cellbegineditevent"></div>
        <div style="margin-top: 10px;" id="cellendeditevent"></div>
    </div>


}
