@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

@section scripts {

    <script src="~/Scripts/jqx-all.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            // prepare the data
            var GroupesUtilisateursSource = {
                datatype: "json",
                datafields: [
                    { name: 'Libelle_Groupe_Utilisateur', type: 'string' },
                     { name: 'Id_Groupe_Utilisateur', type: 'number' }

                ],
                id: 'Id_Groupe_Utilisateur',
                url: '/GestionOperation/GetGroupe_Utilisateur',

            async: false
        };

            //dropdownlist1


            var GroupesUtilisateursAdapter = new $.jqx.dataAdapter(GroupesUtilisateursSource, {
                autoBind: true,
                beforeLoadComplete: function (records) {
                    // alert(111);
                    var data = new Array();


                    // update the loaded records. Dynamically add EmployeeName and EmployeeID fields.
                    for (var i = 0; i < records.length; i++) {
                        // alert(i);
                        var groupeuser = records[i];
                        groupeuser.Libelle_Groupe_Utilisateur = groupeuser.Libelle_Groupe_Utilisateur;
                        groupeuser.Id_Groupe_Utilisateur = groupeuser.Id_Groupe_Utilisateur;
                        data.push(groupeuser);
                    }
                    return data;
                }
            });


  //var2===================================================================================
            var documentsSource =
                        {
                            datatype: "json",
                            datafields: [
                                { name: 'Id_Type_Document', type: 'number' },
                                {
                                    name: 'Code_Type_Document', type: 'string'

                                }

                            ],
                            id: 'Id_Type_Document',
                            url: "/GestionOperation/GetTypes_Document",
                            async: false
                        };
            var dataAdapter1 = new $.jqx.dataAdapter(documentsSource);
            // Create a jqxDropDownList


            var documentsAdapter = new $.jqx.dataAdapter(documentsSource, {
                autoBind: true,
                beforeLoadComplete: function (records) {
                    // alert(111);
                    var data = new Array();


                    // update the loaded records. Dynamically add EmployeeName and EmployeeID fields.
                    for (var i = 0; i < records.length; i++) {
                        // alert(i);
                        var document = records[i];
                        document.Code_Type_Document = document.Code_Type_Document;
                        document.Id_Type_Document = document.Id_Type_Document;
                        data.push(document);
                    }
                    return data;
                }
            });
            //var 3 ========================================================================================
            var banquesSource =
                        {
                            datatype: "json",
                            datafields: [
                                { name: 'BANK_Code', type: 'string' },
                                {
                                    name: 'Description', type: 'string'

                                }

                            ],
                            //  root: "Transactions",
                            //  record: "Transaction",
                            id: 'BANK_Code',
                            url: "/TRs_Flux/GetBanques",
                            async: false
                        };
            var dataAdapter2 = new $.jqx.dataAdapter(banquesSource);
            // Create a jqxDropDownList


            var banquesAdapter = new $.jqx.dataAdapter(banquesSource, {
                autoBind: true,
                beforeLoadComplete: function (records) {
                    // alert(111);
                    var data = new Array();


                    // update the loaded records. Dynamically add EmployeeName and EmployeeID fields.
                    for (var i = 0; i < records.length; i++) {
                        // alert(i);
                        var banque = records[i];
                        banque.BANK_Code = banque.BANK_Code;
                        data.push(banque);
                    }
                    return data;
                }
            });

            //

            //dropdownlist foreignkey

         $("#BANK_CODE").jqxDropDownList({ selectedIndex: 0, source: banquesAdapter, displayMember: "BANK_Code", valueMember: "BANK_Code", width: "100%", height: 25 });
         $("#BANK_CODE").jqxDropDownList('insertAt', { label: 'Selectionner', value: 0 }, 0);

            $("#Id_Type_Document").jqxDropDownList({ selectedIndex: 0, source: documentsAdapter, displayMember: "Code_Type_Document", valueMember: "Id_Type_Document", width: "100%", height: 25 });
            $("#Id_Type_Document").jqxDropDownList('insertAt', { label: 'Selectionner', value: 0 }, 0);

            $("#Id_Groupe_Utilisateur").jqxDropDownList({ selectedIndex: 0, source: GroupesUtilisateursAdapter, displayMember: "Libelle_Groupe_Utilisateur", valueMember: "Id_Groupe_Utilisateur", width: "100%", height: 25 });
            $("#Id_Groupe_Utilisateur").jqxDropDownList('insertAt', { label: 'Selectionner', value: 0 }, 0);

            // prepare the data
            var source =
            {
                datatype: "json",
                datafields: [
                   { name: 'Id_op', type: 'number' },
             //    { name: 'Bank', type: 'string' },

                    /**/

              {
                   name: ' BANK_CODE',
                       value: 'BANK_CODE',
                        values: {
                           source: banquesAdapter.records,
                           value: 'BANK_Code',
                            name: 'BANK_Code'
                       }
                              },
                       { name: 'BANK_CODE', type: 'string' },
                        /**/



                     { name: 'Code_Operation', type: 'string' },
                     { name: 'Libelle_Operation', type: 'string' },

                    /**/
                    {
                        name: 'Code_Type_Document',
                        value: 'Id_Type_Document',
                        values: {
                            source: documentsAdapter.records,
                            value: 'Id_Type_Document',/**/
                            name: 'Code_Type_Document'
                        }
                    },
                    { name: 'Id_Type_Document', type: 'number' },
                    /**/

                    {
                        name: 'Libelle_Groupe_Utilisateur',
                        value: 'Id_Groupe_Utilisateur',
                        values: {
                            source: GroupesUtilisateursAdapter.records,
                            value: 'Id_Groupe_Utilisateur',
                            name: 'Libelle_Groupe_Utilisateur'
                        }
                    },
                    { name: 'Id_Groupe_Utilisateur', type: 'number' }
                ],
                id: 'Id_op',
                url: '/GestionOperation/GetOperation',
                addrow: function (rowid, rowdata, commit) {
                    // synchronize with the server - send insert command
                    //var data = $.param(rowdata);
                    $.ajax({
                        // cache: false,
                        dataType: 'json',
                        url: '/GestionOperation/AddOperation',
                        data: rowdata,
                        type: "POST",
                        success: function (data, status, xhr) {
                            // Add command is executed.
                            commit(true);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                            commit(false);
                        }
                    });
                },
                updaterow: function (rowid, rowdata, commit) {
                    // synchronize with the server - send update command

                    // rowdata.BusinessEntityID = rowid;
                    $.ajax({
                        // cache: false,
                        dataType: 'json',
                        url: '/GestionOperation/UpdateOperation',
                        data: rowdata,
                        type: "POST",
                        success: function (data, status, xhr) {
                            // update command is executed.
                            commit(true);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                            commit(false);
                        }
                    });
                },
                deleterow: function (rowid, commit) {
                    // synchronize with the server - send delete command
                    $.ajax({
                        //cache: false,
                        dataType: 'json',
                        url: '/GestionOperation/DeleteConfirmed/' + rowid,
                        type: "POST",
                        success: function (data, status, xhr) {
                            // update command is executed.
                            commit(true);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(jqXHR.statusText);
                            commit(false);
                        }
                    });
                }
            };
            var dataAdapter = new $.jqx.dataAdapter(source);
            // create Tree Grid
            $("#grid").jqxGrid(
            {
                width: '100%',
                source: dataAdapter,
                //autowidth:true,
                editable: true,
                enabletooltips: true,
                showfilterrow: true,
                filterable: true,
                groupable: true,
                pageable: true,
                autoheight: true,
                columnsresize: true,
                sortable: true,
                selectionmode: 'multiplerowsextended',
                showtoolbar: true,
                rendertoolbar: function (toolbar) {
                    var me = this;
                    var container = $("<div style='margin: 10px;'></div>");
                    toolbar.append(container);
                    container.append('<input id="addrowbutton" type="button" value="Ajouter" />');
                    $("#addrowbutton").jqxButton();

                    // create new row.
                    $("#addrowbutton").bind('click', function () {

                        var offset = $("#grid").offset();
                        //alert("Offset");
                        $("#popupWindow").jqxWindow({ position: { x: parseInt(offset.left) + 300, y: parseInt(offset.top) + 150 } });
                        $("#popupWindow").jqxWindow({ width: '400px', height: '300px', cancelButton: $("#Cancel"), });
                //   $('#Electronique').jqxCheckBox({ checked: false });
                        $("#popupWindow").jqxWindow('open');

                    });

                },
                columns: [
               //   { text: 'FLOW_CODE', dddtaField: 'FLOW_CODE', width: 200, filtertype: 'checkedlist', width: "10%" },
                //  { text: 'BANK_CODE', dataField: 'BANK_CODE', width: 200, filtertype: 'checkedlist', width: "10%" },
                  /*{
                      text: 'BANK_CODE', datafield: 'BANK_Code', displayfield: 'Description', columntype: 'dropdownlist', width: '10%',
                      createeditor: function (row, value, editor) {
                          editor.jqxDropDownList({
                              source: banquesAdapter,
                              displayMember: 'Description',
                              valueMember: 'BANK_Code'
                          });
                      }
                  },*/
                     {
                         text: 'BANK_CODE', datafield: 'BANK_CODE', displayfield: 'BANK_CODE', columntype: 'dropdownlist', width: '15%',
                         createeditor: function (row, value, editor) {
                             editor.jqxDropDownList({
                                 source: banquesAdapter,
                                 displayMember: 'BANK_Code',
                                 valueMember: 'BANK_Code'
                             });
                         }
                     },
                  //

               //  { text: 'BANK_CODE', dataField: 'BANK_CODE', width: 200, filtertype: 'checkedlist', width: "20%" },
                  { text: 'Code_Operation', dataField: 'Code_Operation', width: 200, filtertype: 'checkedlist', width: "20%" },
                  { text: 'Libelle_Operation', dataField: 'Libelle_Operation', width: 200, filtertype: 'checkedlist', width: "25%" },

                  //{ text: 'Type Document', dataField: 'Id_Type_Document', width: "10%" },
                  //

                  {
                      text: 'Type Document', datafield: 'Id_Type_Document', displayfield: 'Code_Type_Document', columntype: 'dropdownlist', width: '10%',
                      createeditor: function (row, value, editor) {
                          editor.jqxDropDownList({
                              source: documentsAdapter,
                              displayMember: 'Code_Type_Document',
                              valueMember: 'Id_Type_Document'
                          });
                      }
                  },

                  {
                      text: 'Groupe Utilisateur', datafield: 'Id_Groupe_Utilisateur', displayfield: 'Libelle_Groupe_Utilisateur', columntype: 'dropdownlist', width: '20%',
                      createeditor: function (row, value, editor) {
                          editor.jqxDropDownList({
                              source: GroupesUtilisateursAdapter,
                              displayMember: 'Libelle_Groupe_Utilisateur',
                              valueMember: 'Id_Groupe_Utilisateur'
                          });
                      }
                  },
                  //{ text: 'Groupe Utilisateur', dataField: 'Id_Groupe_Utilisateur', width: "10%" },
                   {
                       text: 'Supprimer', datafield: 'Supprimer', columntype: 'button', sortable:false, groupable: false, filterable: false, editable: false, width: "10%", cellsrenderer: function () {
                           return "delete";
                       }, buttonclick: function (row) {
                           // open the popup window when the user clicks a button.

                           deleterow = row;
                           var offset = $("#grid").offset();
                           // get the clicked row's data and initialize the input fields.
                           var dataRecord = $("#grid").jqxGrid('getrowdata', deleterow);
                           var rowID = $('#grid').jqxGrid('getrowid', deleterow);

                           $("#Enregistrer").click(function () {
                               var commit = $("#grid").jqxGrid('deleterow', rowID);
                               $("#popupDelete").jqxWindow('hide');
                               $("#grid").jqxGrid('updatebounddata');
                           });

                           if (rowID != null) {

                               var offset = $("#grid").offset();
                               $("#popupDelete").jqxWindow({ position: { x: parseInt(offset.left) + 300, y: parseInt(offset.top) + 60 } });

                               $("#popupDelete").jqxWindow({ width: '400px', height: '100px', cancelButton: $("#Annuler"), });
                               $("#popupDelete").jqxWindow('open');
                           }
                           else {
                               alert("no select");
                           }
                       }
                   }
                ]
            });

            // initialize the popupDelete window and buttons.
            $("#popupDelete").jqxWindow({
                width: 250, resizable: false, isModal: true, autoOpen: false, cancelButton: $("#Annuler"), modalOpacity: 0.01
            });

            $("#Annuler").jqxButton();

            $("#Enregistrer").jqxButton();
            /**/

            // initialize the popup window and buttons.
            $("#popupWindow").jqxWindow({
                width: 400, resizable: false, isModal: true, autoOpen: false, cancelButton: $("#Cancel"), modalOpacity: 0.01
            });

            $("#Cancel").jqxButton();
            $("#Save").jqxButton();
            // update the edited row when the user clicks the 'Save' button.
            $("#Save").click(function () {
                var row = {

                    BANK_Code: $("#BANK_CODE").val(),
                    Code_Operation: $("Code_Operation").val(),
                    Libelle_Operation: $("Libelle_Operation").val(),
                    Id_Groupe_Utilisateur: $("Id_Groupe_Utilisateur").val(),
                    Id_Type_Document: $("Id_Type_Document").val(),

                };
                var rowID = row.Id_Type_Document;
                var check = $('#grid').jqxValidator('validate');
                if (check == true) {
                    $("#grid").jqxGrid('addrow', rowID, row);

                    $("#popupWindow").jqxWindow('hide');
                    $("#grid").jqxGrid('updatebounddata');
                }
            });


            $("#grid").jqxValidator({
                rules: [
                    { input: '#BANK_Code', message: 'Veillez renseigner ce champ!', action: 'keyup, blur' },
                    { input: '#Code_Operation', message: 'Veillez renseigner ce champ!', action: 'keyup, blur', rule: 'required' },
                    { input: '#Libelle_Operation', message: 'Veillez renseigner ce champ!', action: 'keyup, blur', rule: 'required' },


                ]
            });
        });
    </script>
}

<div id="grid"></div>
<div style="margin-top: 30px;">
    <div id="cellbegineditevent"></div>
    <div style="margin-top: 10px;" id="cellendeditevent"></div>
</div>

<div id="popupDelete">
    <div>Supprimer</div>
    <div style="overflow: hidden;">

        <table>
            <tr>
                <td align="right">
                    <div style="overflow: hidden;">
                        <div>Voulez vous supprimer?</div>
                    </div>
                </td>
            </tr>
            <tr>
                <td align="right"></td>
                <td style="padding-top: 10px;" align="right">
                    <input style="margin-right: 5px;" type="button" id="Enregistrer" value="Confirmer" />
                    <input id="Annuler" type="button" value="Annuler" />
                </td>
            </tr>
        </table>
    </div>
</div>

<div id="popupWindow">
    <div>Add</div>
    <div style="overflow: hidden;">
        <br />
        <table>


            <tr>
                <td align="right">BANK CODE:</td>
                <td td align="left">
                    <div id="BANK_CODE" style="width: 170px; margin-top: 20px;">
                    </div>
            </tr>

            <tr>
                <td align="right">Code_Operation:</td>
                <td align="left"><input id="Code_Operation" /></td>
            </tr>
            <tr>
                <td align="right">Libelle_Operation:</td>
                <td align="left"><input id="Libelle_Operation" /></td>
            </tr>
            <tr>
                <td align="right">Id_Type_Document:</td>
                <td td align="left">
                    <div id="Id_Type_Document" style="width: 170px; margin-top: 20px;">
                    </div>
            </tr>
            <tr>
                <td align="right">Id_Groupe_Utilisateur:</td>
                <td td align="left">
                    <div id="Id_Groupe_Utilisateur" style="width: 170px; margin-top: 20px;">
                    </div>
            </tr>
            <tr>
                <td align="right"></td>
                <td style="padding-top: 10px;" align="right">
                    <input style="margin-right: 5px;" type="button" id="Save" value="Save" />
                    <input id="Cancel" type="button" value="Cancel" />
                </td>
            </tr>
        </table>

    </div>
</div>
